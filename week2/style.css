/* for the header */
@font-face {
  font-family: 'Russo One';
  src: url('./fonts/Russo_One/RussoOne-Regular.ttf');
}
/* Bold */
@font-face {
  font-family: 'Roboto';
  src: url('./fonts/Roboto/Roboto-Bold.ttf');
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: 'Roboto';
  src: url('./fonts/Roboto/Roboto-BoldItalic.ttf');
  font-weight: 700;
  font-style: italic;
}
/* Regular */
@font-face {
  font-family: 'Roboto';
  src: url('./fonts/Roboto/Roboto-Regular.ttf');
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: 'Roboto';
  src: url('./fonts/Roboto/Roboto-Italic.ttf');
  font-weight: 400;
  font-style: italic;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  --light0: #fad6d7;
  --light1: #fd979a;
  --light2: #c85457;
  --dark1: #6b0b11;
  --dark2: #420001;
  --medium: #98272b;
  --text: #6c6c6c;
  --body: #363636;
}
html {
  font-size: 16px;
}
body {
  background-color: var(--body);
  color: var(--text);
  font-family: 'Roboto', serif;
  font-weight: 400;
}
/* Main page header */
header {
  display: flex;
  align-items: center; /* Align vertically */
  justify-content: center; /* Horizontally */

  width: 90%;
  margin: auto;
  margin-bottom: 5px;

  background-color: var(--medium);
  font-size: 2.5vmax;
  letter-spacing: 0.5rem;
}
h1,
h2,
h3 {
  font-family: 'Russo One';
  color: var(--dark2);
}
/* Headers for two Sections */
section h2 {
  background-color: var(--dark1);
  color: var(--light1);
  letter-spacing: 0.2rem;
  padding-left: 10%;
  margin-bottom: 5px;
}
/* Headers for articles (grid-item) */
.grid-item h3 {
  font-size: 1rem;
  letter-spacing: 0.05rem;
}

/* Page contents container */
main {
  width: 90%;
  margin: auto;
}

/* Articles */
.grid-item {
  list-style: none;
  border: 1px solid var(--body);
  padding: 10px;
  background-color: white;
}

/* Scales articles to indicate to the user that they're 
looking at that specific drone */
.grid-item:hover {
  animation: itemsHover 0.2s ease-in forwards;
}
/* *** Description of the animation **** */
@keyframes itemsHover {
  0% {
    transform: scale(1, 1);
  }
  100% {
    transform: scale(1.04, 1.04);
  }
}

/******************* Left & Right columns *******************/
#grid-floats,
#grid-flex {
  display: grid;
}

#grid-floats img,
#grid-flex img {
  margin-top: 10px;
}
#grid-floats p,
#grid-flex p {
  padding-top: 10px;
}

/****** Arranging elements of the 'floats' column *****/

#grid-floats .grid-item:nth-child(odd) img {
  float: left;
  margin-right: 5px;
}
#grid-floats .grid-item:nth-child(even) img {
  float: right;
  margin-left: 5px;
}
#grid-floats .grid-item::after {
  content: '';
  clear: both;
}

/***** Arranging elements of the 'flex' column *****/

#grid-flex .grid-item {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
}
#grid-flex .grid-item h3 {
  width: 100%;
}
#grid-flex .grid-item img {
  width: 50%;
}
#grid-flex .grid-item p {
  width: 45%;
}
#grid-flex .grid-item:nth-child(even) img {
  order: 1;
}

/*************** Small screens ****************/
@media screen and (max-width: 600px) {
  header {
    height: 70px;
  }
  section h2 {
    height: 30px;
    font-size: 1.2rem;
    line-height: 30px;
    letter-spacing: 0.2rem;
  }
  #grid-floats,
  #grid-flex {
    grid-template-columns: 100%;
    row-gap: 5px;
  }
  #grid-floats {
    margin-bottom: 20px;
  }

  #grid-floats img {
    width: 50%;
  }
  /* img {
    float: none;
    width: 100%;
    margin-bottom: 10px;
    transition: 0.5s linear;
  } */
}
/***************** Medium screens *********************/
@media screen and (min-width: 600px) and (max-width: 1024px) {
  header {
    height: 80px;
  }
  section h2 {
    height: 30px;
    font-size: 1.2rem;
    line-height: 30px;
    letter-spacing: 0.2rem;
  }
  #grid-floats {
    margin-bottom: 20px;
  }
  #grid-floats,
  #grid-flex {
    grid-template-columns: repeat(6, 1fr);
    grid-gap: 4px;
  }
  /* Set default width of grid elements to 3fr */
  .grid-item {
    grid-column: span 3;
  }
  /* Starting from the third element set an element's
  width to 2fr */
  .grid-item:nth-child(n + 3) {
    grid-column: span 2;
  }
  /********* Arranging floats elements ***********/

  /* On first 2 articles */
  #grid-floats .grid-item img {
    width: 50%;
  }
  /* Ont the rest articles */
  #grid-floats .grid-item:nth-child(n + 3) img {
    width: 100%;
    float: none;
  }

  /********** Arranging flex elements ************/
  #grid-flex .grid-item:nth-child(n + 3) {
    flex-direction: column;
  }
  #grid-flex .grid-item:nth-child(n + 3) img,
  #grid-flex .grid-item:nth-child(n + 3) p {
    width: 100%;
  }
}
/******************** Large screens ***********************/
@media screen and (min-width: 1024px) {
  header {
    height: 100px;
  }
  /* To display #grid-floats and #grid-flex next to
  each other (not one above(below) another) I use flex in a row */
  main {
    display: flex;
    flex-direction: row;
  }
  section h2 {
    height: 40px;
    font-size: 1.5rem;
    line-height: 40px;
    letter-spacing: 0.3rem;
  }
  section:first-child {
    flex-basis: 50%;
    padding-right: 4px;
    border-right: 1px dotted var(--light1);
  }
  section:last-child {
    flex-basis: 50%;
    padding-left: 4px;
  }
  #grid-floats,
  #grid-flex {
    grid-template-columns: 1fr 1fr;
    grid-gap: 4px;
  }
  /* Make first article two cells long */
  .grid-item:first-child {
    grid-column: span 2;
  }
  /********* Arranging floats elements ***********/
  #grid-floats .grid-item:first-child img {
    width: 50%;
  }
  #grid-floats .grid-item:not(:first-child) img,
  #grid-floats .grid-item:not(:first-child) p {
    float: none;
    width: 100%;
  }

  /***** Arranging flex elements *****/
  /* For all articles except first */
  #grid-flex .grid-item:not(:first-child) {
    flex-direction: column;
  }
  #grid-flex .grid-item:not(:first-child) img,
  #grid-flex .grid-item:not(:first-child) p {
    width: 100%;
  }
}
